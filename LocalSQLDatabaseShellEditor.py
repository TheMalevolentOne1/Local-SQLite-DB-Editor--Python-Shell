import re
import sys, os

#Notes for development: Make the SQL Exportable and saveable in a file so that users can export the SQL statements generated by the program for documentation and report.


print("Welcome to the SQLite Local Database editor! \n You should know who this was made by obvs :P")

userRequest = "" #assigning userRequest here to avoid later if statement checks in case of no database files.

filePath = os.listdir()
for i in range(len(filePath)):
    if re.search(".db", filePath[i]):
        userRequest = str(input(f"A Database File has been found.\n\nYes or No is the file {filePath[i]} the correct database?: ")).title()
        if userRequest == "Yes":
            database = filePath[i]
            break
        elif userRequest != "Yes" and userRequest != "No":
            print("Answer provided was invalid. Input given processed as \"No\"")
        
if userRequest == "No":
    print("The database that you want has not been discovered. Please ensure that you have moved your database to the same file as this program and try again. \nThanks!")
    quit()

elif userRequest != "Yes":
    print("No database was found. Please ensure that you have moved your database to the same file as this program and try again.\nThanks!")
    quit()

import sqlite3

con = sqlite3.connect("test.db")
cur = con.cursor()

while True:
    sel = int(input("\nSQLite Database Editor Menu:\n\nPlease select one of the following options:\n1) Create a Table\n2) Insert into a Table\n3) Alter a Table\n4) Quit\n\nWhat do you want to do: "))
    if sel == 1:
        print("For the table name please note that any whitespace will be removed i.e spaces, and it will be converted to standard naming unless it has already been specified i.e tblTableName")
        nameOfTable=str(input("Please enter the name you want this table to be called?: "))
        if nameOfTable[1:3] != "tbl":
            nameOfTable = "tbl" + nameOfTable
        createTable = f"CREATE TABLE \"{nameOfTable}\" ( "
        numOfFields=int(input("Please enter the number of fields you want the table to have?: "))
        for i in range(numOfFields):
            nameOfField = str(input("\nPlease enter the name you want to call the field: "))
            dataTypeValid = False
            while not dataTypeValid:
                print("Currently Permitted Datatypes:\nTEXT\nINT\nDATE")
                dataType = str(input("Please enter the datatype that this field should be: ")).upper()
                if dataType == "TEXT" or dataType == "INT" or dataType == "DATE":
                    dataTypeValid = True
                else:
                    print("Invalid Datatype")

            print("The next few questions require True or False answers")
            isPrimary = bool(input("Is this field a primary key?: "))
            if not isPrimary:
                isUnique = bool(input("Is this field unique? (Not permitting duplicates): "))
            isNotNull = bool(input("Should this field allow null (Empty) values: "))
            #Include Foreign Key Here as function call. Add later.
            createTable += f"\"{nameOfField}\" {dataType}"
            if isPrimary == True:
                createTable += " " + "PRIMARY KEY"
            if not isPrimary and isUnique == True:
                createTable += " " + "UNIQUE"
            if isNotNull == True:
                createTable += " " + "NOT NULL"
            if i+1 != numOfFields:
                createTable += ", "
            elif i+1 == numOfFields:
                createTable += " " + ");"

        print(createTable)